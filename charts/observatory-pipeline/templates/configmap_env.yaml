{{- range .Values.streams }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: stream-{{ .stream }}-env-config
  namespace: {{ $.Release.Namespace }}
  labels:
    app: stream-{{ .stream }}
  annotations:
    {{- toYaml (default $.Values.defaults.annotations .annotations) | nindent 4 }}
data:
  # General
  DEBUG_LEVEL: "{{ default $.Values.defaults.debugLevel .debugLevel }}"
  CLIENT_ID: "stream-{{ .stream }}"
  STREAM: "{{ .stream }}"

  # MQTT
  MQTT_SERVICE_HOST: "{{ default $.Values.defaults.mqtt.broker (default (dict "broker" $.Values.defaults.mqtt.broker) .mqtt).broker }}"
  MQTT_SERVICE_PORT: "{{ default $.Values.defaults.mqtt.port (default (dict "port" $.Values.defaults.mqtt.port) .mqtt).port }}"
  MQTT_USERNAME: "{{ default $.Values.defaults.mqtt.username (default (dict "username" $.Values.defaults.mqtt.username) .mqtt).username }}"
  MQTT_PASSWORD: "{{ default $.Values.defaults.mqtt.password (default (dict "password" $.Values.defaults.mqtt.password) .mqtt).password }}"
  QOS: "{{ default $.Values.defaults.mqtt.qos (default (dict "qos" $.Values.defaults.mqtt.qos) .mqtt).qos }}"
  KEEP_ALIVE_INTERVAL: "{{ default $.Values.defaults.mqtt.keepAliveInterval (default (dict "keepAliveInterval" $.Values.defaults.mqtt.keepAliveInterval) .mqtt).keepAliveInterval }}"
  CONNECT_RETRY_INTERVAL: "{{ default $.Values.defaults.mqtt.connectRetryInterval (default (dict "connectRetryInterval" $.Values.defaults.mqtt.connectRetryInterval) .mqtt).connectRetryInterval }}"
  MQTT_TOPIC_SINK: "{{ default $.Values.defaults.mqtt.topicSink (default (dict "topicSink" $.Values.defaults.mqtt.topicSink) .mqtt).topicSink }}"
  MQTT_TOPIC_SOURCE: "{{ default $.Values.defaults.mqtt.topicSource (default (dict "topicSource" $.Values.defaults.mqtt.topicSource) .mqtt).topicSource }}"
  MQTT_TOPIC_ALL_CAMERAS: "{{ default $.Values.defaults.mqtt.topicAllCameras (default (dict "topicAllCameras" $.Values.defaults.mqtt.topicAllCameras) .mqtt).topicAllCameras }}"
  MQTT_TOPIC_DETECTIONS: "{{ default $.Values.defaults.mqtt.topicDetections (default (dict "topicDetections" $.Values.defaults.mqtt.topicDetections) .mqtt).topicDetections }}"
  MQTT_TOPIC_INFERENCE: "{{ default $.Values.defaults.mqtt.topicInference (default (dict "topicInference" $.Values.defaults.mqtt.topicInference) .mqtt).topicInference }}"
  MQTT_TOPIC_MOVEMENTS: "{{ default $.Values.defaults.mqtt.topicMovements (default (dict "topicMovements" $.Values.defaults.mqtt.topicMovements) .mqtt).topicMovements }}"
  MQTT_TOPIC_FILTERED_MOVEMENTS: "{{ default $.Values.defaults.mqtt.topicFilteredMovements (default (dict "topicFilteredMovements" $.Values.defaults.mqtt.topicFilteredMovements) .mqtt).topicFilteredMovements }}"
  MQTT_TOPIC_ALERTS: "{{ default $.Values.defaults.mqtt.topicAlerts (default (dict "topicAlerts" $.Values.defaults.mqtt.topicAlerts) .mqtt).topicAlerts }}"
  MQTT_TOPIC_STALE_ALERTS: "{{ default $.Values.defaults.mqtt.topicStaleAlerts (default (dict "topicStaleAlerts" $.Values.defaults.mqtt.topicStaleAlerts) .mqtt).topicStaleAlerts }}"
  MQTT_TOPIC_SENSORS: "{{ default $.Values.defaults.mqtt.topicSensors (default (dict "topicSensors" $.Values.defaults.mqtt.topicSensors) .mqtt).topicSensors }}"
  MQTT_TOPIC_MEASUREMENTS: "{{ default $.Values.defaults.mqtt.topicMeasurements (default (dict "topicMeasurements" $.Values.defaults.mqtt.topicMeasurements) .mqtt).topicMeasurements }}"
  MQTT_TOPIC_TOE_STATE: "{{ default $.Values.defaults.mqtt.topicToeState (default (dict "topicToeState" $.Values.defaults.mqtt.topicToeState) .mqtt).topicToeState }}"
  MQTT_TOPIC_TOE_EVENTS_INFERENCE: "{{ default $.Values.defaults.mqtt.topicToeEventsInference (default (dict "topicToeEventsInference" $.Values.defaults.mqtt.topicToeEventsInference) .mqtt).topicToeEventsInference }}"
  MQTT_TOPIC_TOE_EVENTS_MOVEMENTS: "{{ default $.Values.defaults.mqtt.topicToeEventsMovements (default (dict "topicToeEventsMovements" $.Values.defaults.mqtt.topicToeEventsMovements) .mqtt).topicToeEventsMovements }}"
  MQTT_TOPIC_TOE_EVENTS_ALERTS: "{{ default $.Values.defaults.mqtt.topicToeEventsAlerts (default (dict "topicToeEventsAlerts" $.Values.defaults.mqtt.topicToeEventsAlerts) .mqtt).topicToeEventsAlerts }}"
  MQTT_TOPIC_TOE_EVENTS_STALE_ALERTS: "{{ default $.Values.defaults.mqtt.topicToeEventsStaleAlerts (default (dict "topicToeEventsStaleAlerts" $.Values.defaults.mqtt.topicToeEventsStaleAlerts) .mqtt).topicToeEventsStaleAlerts }}"
  MQTT_TOPIC_TOE_EVENTS: "{{ default $.Values.defaults.mqtt.topicToeEvents (default (dict "topicToeEvents" $.Values.defaults.mqtt.topicToeEvents) .mqtt).topicToeEvents }}"
  MQTT_TOPIC_TOE_COMMANDS: "{{ default $.Values.defaults.mqtt.topicToeCommands (default (dict "topicToeCommands" $.Values.defaults.mqtt.topicToeCommands) .mqtt).topicToeCommands }}"
  MQTT_TOPIC_TOE_FILE_COMMANDS: "{{ default $.Values.defaults.mqtt.topicToeFileCommands (default (dict "topicToeFileCommands" $.Values.defaults.mqtt.topicToeFileCommands) .mqtt).topicToeFileCommands }}"
  MQTT_TOPIC_DEVICES_ALL_EVENTS: "{{ default $.Values.defaults.mqtt.topicAllDevicesEvents (default (dict "topicAllDevicesEvents" $.Values.defaults.mqtt.topicAllDevicesEvents) .mqtt).topicAllDevicesEvents }}"
  MQTT_TOPIC_DEVICES_FILE_TRANSFERS: "{{ default $.Values.defaults.mqtt.topicFileTransfers (default (dict "topicFileTransfers" $.Values.defaults.mqtt.topicFileTransfers) .mqtt).topicFileTransfers }}"
  MQTT_TOPIC_DEVICES_EVENTS_ALERTS: "{{ default $.Values.defaults.mqtt.topicDevicesEventsAlerts (default (dict "topicDevicesEventsAlerts" $.Values.defaults.mqtt.topicDevicesEventsAlerts) .mqtt).topicDevicesEventsAlerts }}"
  MQTT_TOPIC_DEVICES_EVENTS_STALE_ALERTS: "{{ default $.Values.defaults.mqtt.topicDevicesEventsStaleAlerts (default (dict "topicDevicesEventsStaleAlerts" $.Values.defaults.mqtt.topicDevicesEventsStaleAlerts) .mqtt).topicDevicesEventsStaleAlerts }}"
  MQTT_TOPIC_FACES: "{{ default $.Values.defaults.mqtt.topicFaces (default (dict "topicFaces" $.Values.defaults.mqtt.topicFaces) .mqtt).topicFaces }}"

  # Frontend
  FRONT_END_DEFAULT_INTERVAL: "{{ default $.Values.defaults.fe.frontEndDefaultInterval (default (dict "frontEndDefaultInterval" $.Values.defaults.fe.frontEndDefaultInterval) .fe).frontEndDefaultInterval }}"

  # Historian
  HISTORIAN_BASE_URL: "{{ default $.Values.defaults.historian.apiUrl (default (dict "apiUrl" $.Values.defaults.historian.apiUrl) .historian).apiUrl }}"
  RECORD_DETECTIONS_INTERVAL: "{{ default $.Values.defaults.historian.recordDetectionsInterval (default (dict "recordDetectionsInterval" $.Values.defaults.historian.recordDetectionsInterval) .historian).recordDetectionsInterval }}"
  OBJECTS_TO_FILTER: "{{ default $.Values.defaults.historian.objectsToFilter (default (dict "objectsToFilter" $.Values.defaults.historian.objectsToFilter) .historian).objectsToFilter }}"
  IOU_THRESHOLD: "{{ default $.Values.defaults.regions.iouThreshold (default (dict "iouThreshold" $.Values.defaults.regions.iouThreshold) .regions).iouThreshold }}"

  # Video
  MIN_START_BEFORE_ALERT: "{{ default $.Values.defaults.video.minStartBeforeAlert (default (dict "minStartBeforeAlert" $.Values.defaults.video.minStartBeforeAlert) .video).minStartBeforeAlert }}"
  VIDEO_SEGMENT_LENGTH: "{{ default $.Values.defaults.video.segmentLength (default (dict "segmentLength" $.Values.defaults.video.segmentLength) .video).segmentLength }}"
  VIDEO_SEGMENT_RETENTION_LENGTH: "{{ default $.Values.defaults.video.segmentRetentionLength (default (dict "segmentRetentionLength" $.Values.defaults.video.segmentRetentionLength) .video).segmentRetentionLength }}"
  VIDEO_MAX_CLIP_LENGTH: "{{ default $.Values.defaults.video.maxClipLength (default (dict "maxClipLength" $.Values.defaults.video.maxClipLength) .video).maxClipLength }}"
  VIDEO_CLIP_RUNUP_LENGTH: "{{ default $.Values.defaults.video.clipRunupLength (default (dict "clipRunupLength" $.Values.defaults.video.clipRunupLength) .video).clipRunupLength }}"
  CHUNK_MAX_SIZE: "{{ default $.Values.defaults.video.chunkMaxSize (default (dict "chunkMaxSize" $.Values.defaults.video.chunkMaxSize) .video).chunkMaxSize }}"
  CHUNK_RETENTION_SECONDS: "{{ default $.Values.defaults.video.chunkRetentionSeconds (default (dict "chunkRetentionSeconds" $.Values.defaults.video.chunkRetentionSeconds) .video).chunkRetentionSeconds }}"
  VIDEO_BASE_PATH: "{{ default $.Values.defaults.video.videoBasePath (default (dict "videoBasePath" $.Values.defaults.video.videoBasePath) .video).videoBasePath }}"
  VIDEO_HAS_ANNOTATIONS: "{{ default $.Values.defaults.video.hasAnnotations (default (dict "hasAnnotations" $.Values.defaults.video.hasAnnotations) .video).hasAnnotations }}"
  ANNOTATIONS_BASE_PATH: "{{ default $.Values.defaults.video.annotationsBucketPath (default (dict "annotationsBucketPath" $.Values.defaults.video.annotationsBucketPath) .video).annotationsBucketPath }}"
  SNAPSHOT_BASE_PATH: "{{ default $.Values.defaults.video.snapshotBucketPath (default (dict "snapshotBucketPath" $.Values.defaults.video.snapshotBucketPath) .video).snapshotBucketPath }}"

  # Alerts
  ALERT_STALE_SECONDS: "{{ default $.Values.defaults.alerts.staleSeconds (default (dict "staleSeconds" $.Values.defaults.alerts.staleSeconds) .alerts).staleSeconds }}"

  # Person Down
  PERSON_DOWN_INTERVAL: "{{ default $.Values.defaults.alerts.personDownInterval (default (dict "personDownInterval" $.Values.defaults.alerts.personDownInterval) .alerts).personDownInterval }}"
  PERSON_DOWN_SCORE_THRESHOLD: "{{ default $.Values.defaults.alerts.personDownScoreThreshold (default (dict "personDownScoreThreshold" $.Values.defaults.alerts.personDownScoreThreshold) .alerts).personDownScoreThreshold }}"
  PERSON_UP_SCORE_THRESHOLD: "{{ default $.Values.defaults.alerts.personUpScoreThreshold (default (dict "personUpScoreThreshold" $.Values.defaults.alerts.personUpScoreThreshold) .alerts).personUpScoreThreshold }}"
  PERSON_DOWN_UP_TOTAL_COUNT_THRESHOLD: "{{ default $.Values.defaults.alerts.personDownUpTotalCountThreshold (default (dict "personDownUpTotalCountThreshold" $.Values.defaults.alerts.personDownUpTotalCountThreshold) .alerts).personDownUpTotalCountThreshold }}"

  # Sensors
  SENSORS_NODE_DATA: "{{ default $.Values.defaults.alerts.sensorsNodeData (default (dict "sensorsNodeData" $.Values.defaults.alerts.sensorsNodeData) .alerts).sensorsNodeData }}"

  # Loitering
  LOITERING_LABELS: "{{ default $.Values.defaults.alerts.loiteringLabels (default (dict "loiteringLabels" $.Values.defaults.alerts.loiteringLabels) .alerts).loiteringLabels }}"
  LOITERING_THRESHOLD: "{{ default $.Values.defaults.alerts.loiteringThreshold (default (dict "loiteringThreshold" $.Values.defaults.alerts.loiteringThreshold) .alerts).loiteringThreshold }}"
  LOITERING_COUNT_THRESHOLD: "{{ default $.Values.defaults.alerts.loiteringCountThreshold (default (dict "loiteringCountThreshold" $.Values.defaults.alerts.loiteringCountThreshold) .alerts).loiteringCountThreshold }}"
  LOITERING_CHECK_STATIONARY: "{{ default $.Values.defaults.alerts.loiteringCheckStationary (default (dict "loiteringCheckStationary" $.Values.defaults.alerts.loiteringCheckStationary) .alerts).loiteringCheckStationary }}"
  LOITERING_STATIONARY_THRESHOLD: "{{ default $.Values.defaults.alerts.loiteringStationaryThreshold (default (dict "loiteringStationaryThreshold" $.Values.defaults.alerts.loiteringStationaryThreshold) .alerts).loiteringStationaryThreshold }}"

  # Classification
  DOMINANT_LABELS_MIN_COUNT: "{{ default $.Values.defaults.alerts.dominantLabelsMinCount (default (dict "dominantLabelsMinCount" $.Values.defaults.alerts.dominantLabelsMinCount) .alerts).dominantLabelsMinCount }}"
  DOMINANT_LABELS_MIN_DURATION: "{{ default $.Values.defaults.alerts.dominantLabelsMinDuration (default (dict "dominantLabelsMinDuration" $.Values.defaults.alerts.dominantLabelsMinDuration) .alerts).dominantLabelsMinDuration }}"
  DOMINANT_LABELS_ALERT_COOLDOWN_TIME: "{{ default $.Values.defaults.alerts.dominantLabelsAlertCooldownTime (default (dict "dominantLabelsAlertCooldownTime" $.Values.defaults.alerts.dominantLabelsAlertCooldownTime) .alerts).dominantLabelsAlertCooldownTime }}"
  SAFE_OPEN_INFER_UNIQUE_ID: "{{ default $.Values.defaults.alerts.safeOpenInferUniqueId (default (dict "safeOpenInferUniqueId" $.Values.defaults.alerts.safeOpenInferUniqueId) .alerts).safeOpenInferUniqueId }}"
  SAFE_OPEN_WINDOW_SIZE_SECONDS: "{{ default $.Values.defaults.alerts.safeOpenWindowSizeSeconds (default (dict "safeOpenWindowSizeSeconds" $.Values.defaults.alerts.safeOpenWindowSizeSeconds) .alerts).safeOpenWindowSizeSeconds }}"

  # Motion
  MOTION_CHECK_INTERVAL: "{{ default $.Values.defaults.alerts.motionCheckInterval (default (dict "motionCheckInterval" $.Values.defaults.alerts.motionCheckInterval) .alerts).motionCheckInterval }}"
  MOTION_ALERT_COOLDOWN_TIME: "{{ default $.Values.defaults.alerts.motionAlertCooldownTime (default (dict "motionAlertCooldownTime" $.Values.defaults.alerts.motionAlertCooldownTime) .alerts).motionAlertCooldownTime }}"

  # Heatmap
  ALERT_HEATMAP_ENABLED: "{{ default $.Values.defaults.alerts.alertHeatmapEnabled (default (dict "alertHeatmapEnabled" $.Values.defaults.alerts.alertHeatmapEnabled) .alerts).alertHeatmapEnabled }}"
  ALERT_HEATMAP_GRID_SIZE: "{{ default $.Values.defaults.alerts.alertHeatmapGridSize (default (dict "alertHeatmapGridSize" $.Values.defaults.alerts.alertHeatmapGridSize) .alerts).alertHeatmapGridSize }}"
  ALERT_HEATMAP_EVENTS_RETENTION_PERIOD: "{{ default $.Values.defaults.alerts.alertHeatmapEventsRetentionPeriod (default (dict "alertHeatmapEventsRetentionPeriod" $.Values.defaults.alerts.alertHeatmapEventsRetentionPeriod) .alerts).alertHeatmapEventsRetentionPeriod }}"
  ALERT_HEATMAP_ALERTS_TO_FILTER: "{{ default $.Values.defaults.alerts.alertHeatmapAlertsToFilter (default (dict "alertHeatmapAlertsToFilter" $.Values.defaults.alerts.alertHeatmapAlertsToFilter) .alerts).alertHeatmapAlertsToFilter }}"
  ALERT_HEATMAP_PERCENTILE_THRESHOLD: "{{ default $.Values.defaults.alerts.alertHeatmapPercentileThreshold (default (dict "alertHeatmapPercentileThreshold" $.Values.defaults.alerts.alertHeatmapPercentileThreshold) .alerts).alertHeatmapPercentileThreshold }}"
  
  # Deprecated in favor of Org Tree
  LABEL_DEVICE_ID: "{{ default $.Values.defaults.labels.deviceID (default (dict "deviceID" $.Values.defaults.labels.deviceID) .labels).deviceID }}"
  LABEL_NAMESPACE: "{{ default $.Values.defaults.labels.namespace (default (dict "namespace" $.Values.defaults.labels.namespace) .labels).namespace }}"
  LABEL_DOMAIN: "{{ default $.Values.defaults.labels.domain (default (dict "domain" $.Values.defaults.labels.domain) .labels).domain }}"

  # Application identification
  APP_NAME: "{{ default $.Values.defaults.appName .appName }}"
  APP_VERSION: "{{ default $.Values.defaults.appVersion .appVersion }}"

  # MongoDB
  MONGODB_URI: "{{ default $.Values.defaults.mongodb.uri (default (dict "uri" $.Values.defaults.mongodb.uri) .mongodb).uri }}"

  # ClickhouseDB
  CLICKHOUSE_DB_URI: "{{ default $.Values.defaults.clickhouse.uri (default (dict "uri" $.Values.defaults.clickhouse.uri) .clickhouse).uri }}"
  DETECTION_RETENTION: "{{ default $.Values.defaults.clickhouse.detectionRetention (default (dict "detectionRetention" $.Values.defaults.clickhouse.detectionRetention) .clickhouse).detectionRetention }}"
  MOVEMENT_RETENTION: "{{ default $.Values.defaults.clickhouse.movementRetention (default (dict "movementRetention" $.Values.defaults.clickhouse.movementRetention) .clickhouse).movementRetention }}"
  INFERENCE_RETENTION: "{{ default $.Values.defaults.clickhouse.inferenceRetention (default (dict "inferenceRetention" $.Values.defaults.clickhouse.inferenceRetention) .clickhouse).inferenceRetention }}"
  ALERT_RETENTION: "{{ default $.Values.defaults.clickhouse.alertRetention (default (dict "alertRetention" $.Values.defaults.clickhouse.alertRetention) .clickhouse).alertRetention }}"

  # KeyDB
  KEYDB_DB_URI: "{{ default $.Values.defaults.keydb.uri (default (dict "uri" $.Values.defaults.keydb.uri) .keydb).uri }}"

  # MilvusDB
  MILVUS_DB_URI: "{{ default $.Values.defaults.milvus.uri (default (dict "uri" $.Values.defaults.milvus.uri) .milvus).uri }}"

  # Video directories
  VIDEO_DIRECTORY: "{{ default $.Values.defaults.video.directory (default (dict "directory" $.Values.defaults.video.directory) .video).directory }}"
  VIDEO_TEMP_DIRECTORY: "{{ default $.Values.defaults.video.tempDirectory (default (dict "tempDirectory" $.Values.defaults.video.tempDirectory) .video).tempDirectory }}"

  # Metrics
  METRICS_INTERVAL: "{{ default $.Values.defaults.metrics.interval (default (dict "interval" $.Values.defaults.metrics.interval) .metrics).interval }}"
  METRICS_PORT: "{{ default $.Values.defaults.metrics.port (default (dict "port" $.Values.defaults.metrics.port) .metrics).port }}"

  # Face Recognition
  COMPREFACE_HOST: "{{ default $.Values.defaults.facerec.compreFaceHost (default (dict "compreFaceHost" $.Values.defaults.facerec.compreFaceHost) .facerec).compreFaceHost }}"
  COMPREFACE_PORT: "{{ default $.Values.defaults.facerec.compreFacePort (default (dict "compreFacePort" $.Values.defaults.facerec.compreFacePort) .facerec).compreFacePort }}"
  COMPREFACE_API_KEY: "{{ default $.Values.defaults.facerec.compreFaceApiKey (default (dict "compreFaceApiKey" $.Values.defaults.facerec.compreFaceApiKey) .facerec).compreFaceApiKey }}"
  FACE_RETENTION: "{{ default $.Values.defaults.facerec.faceRetention (default (dict "faceRetention" $.Values.defaults.facerec.faceRetention) .facerec).faceRetention }}"
  FACE_REC_INTERVAL: "{{ default $.Values.defaults.facerec.faceRecInterval (default (dict "faceRecInterval" $.Values.defaults.facerec.faceRecInterval) .facerec).faceRecInterval }}"
  FACE_IMAGE_SIZE: "{{ default $.Values.defaults.facerec.faceImageSize (default (dict "faceImageSize" $.Values.defaults.facerec.faceImageSize) .facerec).faceImageSize }}"
  FACE_REC_THRESHOLD: "{{ default $.Values.defaults.facerec.faceRecThreshold (default (dict "faceRecThreshold" $.Values.defaults.facerec.faceRecThreshold) .facerec).faceRecThreshold }}"

  # Hands Up
  HANDS_UP_INTERVAL: "{{ default $.Values.defaults.alerts.handsUpInterval (default (dict "handsUpInterval" $.Values.defaults.alerts.handsUpInterval) .alerts).handsUpInterval }}"
  MIN_HANDS_UP_DETECTIONS: "{{ default $.Values.defaults.alerts.handsUpDetections (default (dict "handsUpDetections" $.Values.defaults.alerts.handsUpDetections) .alerts).handsUpDetections }}"

  # Running
  RUNNING_INTERVAL: "{{ default $.Values.defaults.alerts.runningInterval (default (dict "runningInterval" $.Values.defaults.alerts.runningInterval) .alerts).runningInterval }}"
  RUNNING_VELOCITY_THRESHOLD: "{{ default $.Values.defaults.alerts.runningVelocityThreshold (default (dict "runningVelocityThreshold" $.Values.defaults.alerts.runningVelocityThreshold) .alerts).runningVelocityThreshold }}"

{{- end }}